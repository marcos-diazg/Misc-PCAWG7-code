write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WES_TCGA_poorly_reconstructed.192.csv', quote=F, row.names = F)
L.assignments[L.assignments$Sample.Names=='TCGA-EY-A1GF-01A-11D-A13L-09
',]
L.assignments[L.assignments$Sample.Names=='TCGA-EY-A1GF-01A-11D-A13L-09',]
dim()
dim(sub.data)
selected.samples
'Transitional-cell-carcinoma::TCGA-UY-A78O-01A-12D-A339-08'%in%selected.samples
L.assignments[L.assignments$Sample.Names=='TCGA-BS-A0U7-01A-21D-A10B-09',]
L.assignments[L.assignments$Sample.Names=='TCGA-66-2734-01A-01D-0983-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-58-A46M-01A-11D-A24D-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-51-4081-01A-01D-1458-08',]
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/PCAWG_sigProfiler_SBS_signatures_in_samples.csv')
L.assignments[L.assignments$Sample.Names=='SP116794',]
L.assignments[L.assignments$Sample.Names=='SP79204',]
L.assignments[L.assignments$Sample.Names=='SP32222',]
L.assignments[L.assignments$Sample.Names=='SP106753',]
L.assignments[L.assignments$Sample.Names=='SP112967',]
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/PCAWG_sigProfiler_SBS_signatures_in_samples.csv')
L.assignments[L.assignments$Sample.Names=='TCGA-18-3416-01A-01D-0983-08',]
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/TCGA_WES_sigProfiler_SBS_signatures_in_samples.csv')
L.assignments[L.assignments$Sample.Names=='TCGA-18-3416-01A-01D-0983-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-86-7955-01A-11D-2184-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-67-4679-01B-01D-1753-08',]
sigs.192 <- read.csv('~/Desktop/PCAWG7-calls/Ludmil-SBS-strand-bias/exome_strand_bias.csv')
head(sigs)
head(sigs.192)
sigs.192 <- read.csv('~/Desktop/PCAWG7-calls/Ludmil-SBS-strand-bias/sigProfiler_TSB_signatures_exome.csv')
names(sigs.192)[1:3] <- names(mut.type)
sigs.192 <- merge(mut.type, sigs.192, by = names(mut.type), sort=F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_Other/2018-04-13/WES_Other.192.csv')
mut.type <- data.counts[,1:3]
sigs.192 <- read.csv('~/Desktop/PCAWG7-calls/Ludmil-SBS-strand-bias/sigProfiler_TSB_signatures_exome.csv')
names(sigs.192)[1:3] <- names(mut.type)
sigs.192 <- merge(mut.type, sigs.192, by = names(mut.type), sort=F)
all(sigs.192[,1:3] == data.counts[,1:3])
names.data.counts <- t(names.data.counts[1,])
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_Other/2018-04-13/WES_Other.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/nonPCAWG_WES_sigProfiler_SBS_signatures_in_samples_2018_04_13.csv')
idx <- match(names(data.counts)[4:ncol(data.counts)], paste(L.assignments$Cancer.Types, L.assignments$Sample.Names, sep='::'))
L.assignments <- L.assignments[idx, ]
data.recon <- as.matrix(sigs.192[,4:ncol(sigs.192)]) %*% t(L.assignments[,4:ncol(L.assignments)])
accuracy <- sapply(1:ncol(data.recon), function(i){cosine(data.recon[,i], data.counts[,3+i])})
library(lsa)
accuracy <- sapply(1:ncol(data.recon), function(i){cosine(data.recon[,i], data.counts[,3+i])})
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_other_reconstruction-cosine-numsigs-totalcounts.csv')
recon.table <- cbind(recon.table, accuracy)
head(recon.table)
names(recon.table)[5] <- 'SigProfiler.cosine.192.exome.freq'
write.csv(recon.table, '~/Desktop/ICGC-upload/wes_other_reconstruction-cosine-numsigs-totalcounts.csv', quote=F, row.names = F)
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_other_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine > 0.9 & recon.table$SigProfiler.cosine.192.exome.freq < 0.8 & recon.table$total.counts > 200,]
dim(sub.recon.table)
head(sub.recon.table)
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.8 & recon.table$total.counts > 200,]
dim(sub.recon.table)
head(sub.recon.table)
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.85 & recon.table$total.counts > 300,]
dim(sub.recon.table)
head(sub.recon.table)
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.85 & recon.table$total.counts > 500,]
dim(sub.recon.table)
head(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WES_Other_poorly_reconstructed.192.csv', quote=F, row.names = F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_TCGA/new-2018-02-09/WES_TCGA.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_TCGA/new-2018-02-09/WES_TCGA.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/TCGA_WES_sigProfiler_SBS_signatures_in_samples.csv')
idx <- match(names(data.counts)[4:ncol(data.counts)], paste(L.assignments$Cancer.Types, L.assignments$Sample.Names, sep='::'))
L.assignments <- L.assignments[idx, ]
data.recon <- as.matrix(sigs.192[,4:ncol(sigs.192)]) %*% t(L.assignments[,4:ncol(L.assignments)])
accuracy <- sapply(1:ncol(data.recon), function(i){cosine(data.recon[,i], data.counts[,3+i])})
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_TCGA_reconstruction-cosine-numsigs-totalcounts.csv')
recon.table <- cbind(recon.table, accuracy)
head(recon.table)
names(recon.table)[5] <- 'SigProfiler.cosine.192.exome.freq'
write.csv(recon.table, '~/Desktop/ICGC-upload/wes_TCGA_reconstruction-cosine-numsigs-totalcounts.csv', quote=F, row.names = F)
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_TCGA_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.85 & recon.table$total.counts > 500,]
dim(sub.recon.table)
head(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WES_TCGA_poorly_reconstructed.192.csv', quote=F, row.names = F)
recon.table <- read.csv('~/Desktop/ICGC-upload/wgs_pcawg_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.85 & recon.table$total.counts > 1000,]
dim(sub.recon.table)
head(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
dim(sub.data)
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_PCAWG_poorly_reconstructed.192.csv', quote=F, row.names = F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_Other/2018-04-13/WGS_Other.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_Other/2018-04-13/WGS_Other.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
recon.table <- read.csv('~/Desktop/ICGC-upload/wgs_other_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.85 & recon.table$total.counts > 1000,]
dim(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
dim(sub.data)
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_Other_poorly_reconstructed.192.csv', quote=F, row.names = F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
recon.table <- read.csv('~/Desktop/ICGC-upload/wgs_pcawg_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.9 & recon.table$total.counts > 1000,]
dim(sub.recon.table)
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.9 & recon.table$total.counts > 2000,]
dim(sub.recon.table)
head(sub.recon.table)
sub.recon.table$Sample
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.9 & recon.table$total.counts > 1000,]
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_PCAWG_poorly_reconstructed.192.csv', quote=F, row.names = F)
dim(sub.data)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_Other/2018-04-13/WGS_Other.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_Other/2018-04-13/WGS_Other.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
recon.table <- read.csv('~/Desktop/ICGC-upload/wgs_other_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192 < 0.9 & recon.table$total.counts > 1000,]
dim(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_Other_poorly_reconstructed.192.csv', quote=F, row.names = F)
dim(sub.data)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_Other/2018-04-13/WES_Other.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_Other/2018-04-13/WES_Other.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.9 & recon.table$total.counts > 500,]
dim(sub.recon.table)
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_other_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.9 & recon.table$total.counts > 500,]
dim(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WES_Other_poorly_reconstructed.192.csv', quote=F, row.names = F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_TCGA/new-2018-02-09/WES_TCGA.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WES_TCGA/new-2018-02-09/WES_TCGA.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.9 & recon.table$total.counts > 500,]
recon.table <- read.csv('~/Desktop/ICGC-upload/wes_TCGA_reconstruction-cosine-numsigs-totalcounts.csv')
sub.recon.table <- recon.table[recon.table$SigProfiler.cosine.192.exome.freq < 0.9 & recon.table$total.counts > 500,]
dim(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
sub.data <- cbind(data.counts[,1:3], data.counts[,selected.samples])
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WES_TCGA_poorly_reconstructed.192.csv', quote=F, row.names = F)
dim(sub.data)
recon.table[recon.table$Sample=='Liver-HCC::TCGA-CC-A7IH-01A-11D-A33K-10',]
recon.table[recon.table$Sample=='Liver-HCC::TCGA-UB-A7MB-01A-11D-A33Q-10',]
recon.table[recon.table$Sample=='Uterus-AdenoCa::TCGA-AP-A1DK-01A-11D-A135-09',]
recon.table[recon.table$Sample=='
Uterus-AdenoCa::TCGA-BG-A0M4-01A-11W-A10C-09',]
recon.table[recon.table$Sample=='Uterus-AdenoCa::TCGA-BG-A0M4-01A-11W-A10C-09',]
recon.table[recon.table$Sample=='Uterus-AdenoCa::TCGA-D1-A16F-01A-11D-A12J-09',]
recon.table[recon.table$Sample=='Breast-cancer::TCGA-D8-A1XK-01A-21D-A14K-09',]
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/TCGA_WES_sigProfiler_SBS_signatures_in_samples.csv')
dim(L.assignments)
L.assignments[L.assignments$Sample.Names=='TCGA-D8-A1XK-01A-21D-A14K-09',]
recon.table[recon.table$Sample=='Liver-HCC::TCGA-DD-A1EE-01A-11D-A12Z-10',]
L.assignments[L.assignments$Sample.Names=='TCGA-DD-A1EE-01A-11D-A12Z-10',]
L.assignments[L.assignments$Sample.Names=='Lung-AdenoCa::TCGA-55-8094-01A-11D-2238-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-55-8094-01A-11D-2238-08',]
recon.table[recon.table$Sample=='Lung-AdenoCa::TCGA-55-8094-01A-11D-2238-08',]
recon.table[recon.table$Sample=='Lung-SCC::TCGA-90-7964-01A-21D-2184-08',]
L.assignments[L.assignments$Sample.Names=='TCGA-90-7964-01A-21D-2184-08',]
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv')
data.counts.192 <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
dim(data.counts.192)
dim(data.counts)
cos.sim <- sapply(1:2783, function(i){cosine(data.counts[,i+2], data.counts.192[,3+i])})
cos.sim <- sapply(1:2780, function(i){cosine(data.counts[,i+2], data.counts.192[,3+i])})
dim(data.counts)
dim(data.counts.192)
source('~/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/E35BD4DC-6983-451C-B340-A3E634982E64/mSigTools.v0.13.R', echo=TRUE)
df <- read.192.sp.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
df <- duke.nus.rownames.to.cols(df)
df
head(df)
head(df)[,1:5]
aa.must.complement <- df$Ref %in% c('A', 'G')
df <- read.192.sp.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
df <- duke.nus.rownames.to.cols(df)
aa.must.complement <- df$Ref %in% c('A', 'G')
xc <- df[aa.must.complement, ]
rn1 <- revc(paste(xc$Before, xc$Ref, xc$After, sep = ''))
rownames(xc) <- paste(rn1, revc(xc$Var), sep='')
x1 <- df[!aa.must.complement, ]
rownames(x1) <- paste(x1$Before, x1$Ref, x1$After, x1$Var, sep='')
sort.string <- paste(x1$Ref, x1$Var, x1$Before, x1$After, sep = '')
df.nocomp <- x1[order(sort.string), ]
df.comp <- xc[rownames(df.nocomp), ]
# For debugging
# tmp.out <- cbind(df.comp[ ,1:4], df.nocomp[ , 1:4])
# We no longer need the first 4 columns
df.comp <- df.comp[ , -(1:4)]
df.nocomp <- df.nocomp[ , -(1:4)]
out <- df.comp + df.nocomp
out <- as.matrix(out)
out.order <- order(margin.table(out, 2), colnames(out), decreasing = T)
out2 <- out[ , out.order]
out
head(out2)[,1:5]
dim(out2)
data.counts[1:5,1:5]
source('~/Desktop/pcawg-scripts/mSigTools.v0.13.R')
data.counts.192 <- out2
df <- read.96.ludmil.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv')
dim(df)
df[1:5,1:5]
data.counts <- df
all(rownames(data.counts.192) == rownames(data.counts.96))
all(rownames(data.counts.192) == rownames(data.counts))
df <- read.192.sp.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
dim(df)
df[1:5,1:%]
df[1:5,1:5]
aa.must.complement <- df$Ref %in% c('A', 'G')
df <- duke.nus.rownames.to.cols(df)
df[1:5,1:5]
cos.sim <- sapply(1:2780, function(i){cosine(data.counts[,i+2], data.counts.192[,3+i])})
cos.sim <- sapply(1:2780, function(i){cosine(data.counts[,i], data.counts.192[,i])})
data.counts.intranscript <- out2
df <- read.96.ludmil.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv')
data.counts.intergenic <- df
data.counts <- df
data.counts.intergenic <- df - data.counts.intranscript
dim(data.counts.intergenic)
data.counts.intergenic[1:5,1:5]
data.counts.intranscript[1:5,1:5]
df <- read.192.sp.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
df <- duke.nus.rownames.to.cols(df)
aa.must.complement <- df$Ref %in% c('A', 'G')
xc <- df[aa.must.complement, ]
rn1 <- revc(paste(xc$Before, xc$Ref, xc$After, sep = ''))
rownames(xc) <- paste(rn1, revc(xc$Var), sep='')
x1 <- df[!aa.must.complement, ]
rownames(x1) <- paste(x1$Before, x1$Ref, x1$After, x1$Var, sep='')
sort.string <- paste(x1$Ref, x1$Var, x1$Before, x1$After, sep = '')
df.nocomp <- x1[order(sort.string), ]
df.comp <- xc[rownames(df.nocomp), ]
# For debugging
# tmp.out <- cbind(df.comp[ ,1:4], df.nocomp[ , 1:4])
# We no longer need the first 4 columns
df.comp <- df.comp[ , -(1:4)]
df.nocomp <- df.nocomp[ , -(1:4)]
out <- df.comp + df.nocomp
out <- as.matrix(out)
out.order <- order(margin.table(out, 2), colnames(out), decreasing = T)
out2 <- out[ , out.order]
data.counts.intranscript <- out2
data.counts.intranscript[1:5,1:5]
colnames(data.counts.intranscript) <- gsub('\\.\\.', '::', colnames(data.counts.intranscript))
colnames(data.counts.intranscript) <- gsub('\\.', '-', colnames(data.counts.intranscript))
data.counts.intranscript[1:5,1:5]
df <- read.96.ludmil.format('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv')
data.counts <- df
data.counts.intranscript <- data.counts.intranscript[,match(colnames(data.counts), colnames(data.counts.intranscript))]
data.counts.intranscript[1:5,1:5]
data.counts.intergenic <- df - data.counts.intranscript
data.counts.intergenic[1:5,1:5]
cos.sim <- sapply(1:2780, function(i){cosine(data.counts.intergenic[,i], data.counts.intranscript[,i])})
head(cos.sim)
cos.table <- data.frame(Sample=colnames(data.counts.intranscript), Total.counts=colSums(data.counts), cos.sim=cos.sim)
dim(cos.table)
head(cos.table)
cos.table[cos.table$Total.counts>1000 & cos.table$cos.sim < 0.95,]
dim(cos.table[cos.table$Total.counts>1000 & cos.table$cos.sim < 0.95,])
recon.table <- read.csv('~/Desktop/ICGC-upload/wgs_pcawg_reconstruction-cosine-numsigs-totalcounts.csv')
dim(recon.table)
head(recon.table)
all(recon.table$Sample==cos.table$Sample)
recon.table <- cbind(recon.table, cos.sim)
head(recon.table)
names(recon.table)[9]
names(recon.table)[9] <- 'similarity.between.intranscript.and.intergenic'
write.csv(recon.table, '~/Desktop/ICGC-upload/wgs_pcawg_reconstruction-cosine-numsigs-totalcounts-similarity.csv', quote=F, row.names = F)
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
head(recon.table)
data.counts.192 <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.192.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts.192) <- names.data.counts
data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv')
names.data.counts <- read.csv('~/Desktop/ICGC-upload/PCAWG7_mutational_catalogues/WGS_PCAWG/new-2018-02-09/WGS_PCAWG.96.csv', header=F)
names.data.counts <- t(names.data.counts[1,])
names(data.counts) <- names.data.counts
dim(data.counts)
data.counts[1:5,1:5]
dim(data.counts.192)
data.counts.192[1:5,1:5]
sub.recon.table <- recon.table[recon.table$similarity.between.intranscript.and.intergenic < 0.9 & recon.table$total.counts > 1000,]
selected.samples <- as.character(sub.recon.table$Sample)
length(selected.samples)
sub.recon.table <- recon.table[recon.table$similarity.between.intranscript.and.intergenic < 0.95 & recon.table$total.counts > 2000,]
dim(sub.recon.table)
selected.samples <- as.character(sub.recon.table$Sample)
head(selected.samples)
sub.data <- cbind(data.counts.192[,1:3], data.counts.192[,selected.samples])
dim(sub.data)
sub.data[1:5,1:5]
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_PCAWG_inconsistent.192.csv', quote=F, row.names = F)
sub.data <- cbind(data.counts[,1:2], data.counts[,selected.samples])
dim(sub.data)
write.csv(sub.data, '~/Desktop/ICGC-upload/poorly-reconstructed/WGS_PCAWG_inconsistent.96.csv', quote=F, row.names = F)
L.assignments <- read.csv('~/Desktop/ICGC-upload/Mutation_Signature_Assignments/PCAWG_sigProfiler_SBS_signatures_in_samples.csv')
L.assignments[L.assignments$Sample.Names=='SP103619',]
L.assignments[L.assignments$Sample.Names=='SP116665',]
L.assignments[L.assignments$Sample.Names=='SP112831',]
setwd('~/Desktop/ICGC-upload/matrix_plot_code/')
load('matrix-plot_v0.1.R')
load('matrix-plot_v0.1.R')
load('matrix-plot_v0.1.R')
source('matrix-plot_v0.1.R')
colPal
col.ref
new.exp.file = '~/Desktop/PCAWG7-calls/2018-03-13-ludmil-assignments/PCAWG_sigProfiler_SBS_signatures_in_samples_filtered.csv'
expr.data <- read.csv(new.exp.file, stringsAsFactors = F)
head(expr.data)
exp.file = '~/Desktop/PCAWG7-calls/2018-03-13-ludmil-assignments/PCAWG_sigProfiler_SBS_signatures_in_samples.csv'
expr.data <- read.csv(exp.file, stringsAsFactors = F)
head(expr.data)
expr.data$Cancer.Types
unique(expr.data$Cancer.Types)
length()unique(expr.data$Cancer.Types)
length(unique(expr.data$Cancer.Types))
source('matrix-plot_v0.1.R')
dim(exp.file)
dim(expr.data)
head(expr.data)
merge.cancers <- function(expr.data){
sample.names <- expr.data$Cancer.Types
sample.names <- gsub('Bone-Epith', 'Bone-Other', sample.names)
sample.names <- gsub('Bone-Benign', 'Bone-Other', sample.names)
sample.names <- gsub('Breast.*:', 'Breast:', sample.names)
sample.names <- gsub('Cervix.*:', 'Cervix:', sample.names)
sample.names <- gsub('Myeloid-MDS', 'Myeloid-MDS/MPN', sample.names)
sample.names <- gsub('Myeloid-MPN', 'Myeloid-MDS/MPN', sample.names)
sample.names <- gsub('AdenoCa', 'AdenoCA', sample.names)
sample.names <- gsub('^AML:', 'Myeloid-AML:', sample.names)
sample.names <- gsub('Lung-Small', 'Lung-SCC', sample.names)
sample.names <- gsub('Transitional-cell-carcinoma', 'Bladder-TCC', sample.names)
expr.data$Cancer.Types <- sample.names
expr.data
}
exp.data <- merge.cancers(expr.data)
head(exp.data)
unique(exp.data)
unique(exp.data$Cancer.Types)
merge.cancers <- function(expr.data){
sample.names <- expr.data$Cancer.Types
sample.names <- gsub('Bone-Epith', 'Bone-Other', sample.names)
sample.names <- gsub('Bone-Benign', 'Bone-Other', sample.names)
sample.names <- gsub('Breast.*', 'Breast', sample.names)
sample.names <- gsub('Cervix.*', 'Cervix', sample.names)
sample.names <- gsub('Myeloid-MDS', 'Myeloid-MDS/MPN', sample.names)
sample.names <- gsub('Myeloid-MPN', 'Myeloid-MDS/MPN', sample.names)
sample.names <- gsub('AdenoCa', 'AdenoCA', sample.names)
sample.names <- gsub('^AML:]', 'Myeloid-AML', sample.names)
sample.names <- gsub('Lung-Small', 'Lung-SCC', sample.names)
sample.names <- gsub('Transitional-cell-carcinoma', 'Bladder-TCC', sample.names)
expr.data$Cancer.Types <- sample.names
expr.data
}
exp.data <- merge.cancers(expr.data)
unique(exp.data$Cancer.Types)
head(exp.data)
length(unique(exp.data$Cancer.Types))
save(exp.data, file='PCAWG_Sigprofiler_assigment.RData')
load('PCAWG_Sigprofiler_assigment.RData')
rm(list = ls())
source('matrix-plot_v0.1.R')
load('PCAWG_Sigprofiler_assigment.RData')
dim(exp.data)
head(exp.data)
length(unique(exp.data$Cancer.Types))
source('matrix-plot_v0.1.R')
load('PCAWG_Sigprofiler_assigment.RData')
filter.samples(exp.data, filtered.exp.data)
filtered.exp.data <- filter.samples(exp.data)
dim(filtered.exp.data)
head(filtered.exp.data)
source('matrix-plot_v0.1.R')
source('matrix-plot_v0.1.R')
all.mats <- exp.data.to.mats(filtered.exp.data)
all.mats$sample.proportion.mat
dim(all.mats$sample.proportion.mat)
dim(all.mats$mut.proportion.mat)
sig.info.file = '~/Desktop/PCAWG7-calls/consensus_signatures_info_v2.csv'
etiology = read.etiology.table(sig.info.file)
head(etiology)
etiology <- gsub('Unknown', '', etiology)
etiology <- gsub('Possible artifact: unknown', '', etiology)
head(etiology)
dim(etiology)
length(etiology)
names(etiology)
etiology <- etiology[2:length(etiology)]
names(etiology)
length(etiology)
head(etiology)
save(etiology, 'PCAWG_Sigprofiler_aetiology.RData')
save(etiology, file='PCAWG_Sigprofiler_aetiology.RData')
rm(list=ls())
source('matrix-plot_v0.1.R')
load('PCAWG_Sigprofiler_assigment.RData')
load('PCAWG_Sigprofiler_aetiology.RData')
etiology
load('PCAWG_Sigprofiler_assignment.RData')
rm(list=ls())
source('matrix-plot_v0.1.R')
load('PCAWG_Sigprofiler_assignment.RData')
load('PCAWG_Sigprofiler_aetiology.RData')
filtered.exp.data <- filter.samples(exp.data)
all.mats <- exp.data.to.mats(filtered.exp.data)
rm(list=ls())
source('matrix-plot_v0.1.R')
load('PCAWG_Sigprofiler_assignment.RData')
load('PCAWG_Sigprofiler_aetiology.RData')
## PCAWG_WGS
filtered.exp.data <- filter.samples(exp.data)
all.mats <- exp.data.to.mats(filtered.exp.data)
## define mutation rate breaks for SNVs
mut.rate.ref <- c(0.0, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25)
names(mut.rate.ref) <- mut.rate.ref
cairo_pdf('Output_matrix.pdf',  width=11.2677, height=10.6929)
par(mar=c(3.1, 2.7, 3.3, 23.2))
## remove sig 27, 43, 45 ~ 60: likely aritfact
mat1 <- all.mats$sample.proportion.mat[-c(32,48,50:65),]
mat2 <- all.mats$mut.median.load.mat[-c(32,38,50:65),]
cancer.names<-sort(colnames(mat1))
matrix.plot(mat1, mat2, all.mats$n.samples, etiology, mut.rate.ref=mut.rate.ref,
cancer.names=cancer.names, size.legend=TRUE, color.legend='right')
dev.off()
cairo_pdf('Output_matrix.pdf',  width=11.2677, height=10.6929)
par(mar=c(3.2, 2.7, 3.3, 23.2))
## remove sig 27, 43, 45 ~ 60: likely aritfact
mat1 <- all.mats$sample.proportion.mat[-c(32,48,50:65),]
mat2 <- all.mats$mut.median.load.mat[-c(32,38,50:65),]
cancer.names<-sort(colnames(mat1))
matrix.plot(mat1, mat2, all.mats$n.samples, etiology, mut.rate.ref=mut.rate.ref,
cancer.names=cancer.names, size.legend=TRUE, color.legend='right')
dev.off()
CURRENT <- paste(getwd(),"/",sep="")
CURRENT
CURRENT <- paste(getwd(),"/",sep="")
INPUT <- paste(CURRENT,"example_input/",sep="") ### Directory for INPUT data
load(paste0(INPUT, 'PCAWG_Sigprofiler_assignment.RData'))
load(paste0(INPUT,'PCAWG_Sigprofiler_aetiology.RData'))
rm(list=ls())
CURRENT <- paste(getwd(),"/",sep="")
INPUT <- paste(CURRENT,"example_input/",sep="") ### Directory for INPUT data
source('matrix_plot_functions_v0.1.R')
load(paste0(INPUT, 'PCAWG_Sigprofiler_assignment.RData'))
load(paste0(INPUT,'PCAWG_Sigprofiler_aetiology.RData'))
getwd()
t
filtered.exp.data <- filter.samples(exp.data)
all.mats <- exp.data.to.mats(filtered.exp.data)
mut.rate.ref <- c(0.0, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25)
names(mut.rate.ref) <- mut.rate.ref
cairo_pdf('example_output_matrix.pdf',  width=11.2677, height=10.6929)
par(mar=c(3.2, 2.7, 3.3, 23.2))
mat1 <- all.mats$sample.proportion.mat[-c(32,48,50:65),]
mat2 <- all.mats$mut.median.load.mat[-c(32,38,50:65),]
cancer.names<-sort(colnames(mat1))
matrix.plot(mat1, mat2, all.mats$n.samples, etiology, mut.rate.ref=mut.rate.ref,
cancer.names=cancer.names, size.legend=TRUE, color.legend='right')
dev.off()
CURRENT <- paste(getwd(),"/",sep="")
INPUT <- paste(CURRENT,"example_input/",sep="") ### Directory for INPUT data
source('matrix_plot_functions_v0.1.R')
CURRENT <- paste(getwd(),"/",sep="")
INPUT <- paste(CURRENT,"example_input/",sep="") ### Directory for INPUT data
source('matrix_plot_functions_v0.1.R')
CURRENT <- paste(getwd(),"/",sep="")
INPUT <- paste(CURRENT,"example_input/",sep="") ### Directory for INPUT data
source('matrix_plot_functions_v0.1.R')
load(paste0(INPUT, 'PCAWG_Sigprofiler_assignment.RData'))
load(paste0(INPUT,'PCAWG_Sigprofiler_aetiology.RData'))
filtered.exp.data <- filter.samples(exp.data)
all.mats <- exp.data.to.mats(filtered.exp.data)
mut.rate.ref <- c(0.0, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 25)
names(mut.rate.ref) <- mut.rate.ref
cairo_pdf('example_output_matrix.pdf',  width=11.2677, height=10.6929)
par(mar=c(3.2, 2.7, 3.3, 23.2))
## remove sig 27, 43, 45 ~ 60: likely aritfact
mat1 <- all.mats$sample.proportion.mat[-c(32,48,50:65),]
mat2 <- all.mats$mut.median.load.mat[-c(32,38,50:65),]
cancer.names<-sort(colnames(mat1))
matrix.plot(mat1, mat2, all.mats$n.samples, etiology, mut.rate.ref=mut.rate.ref,
cancer.names=cancer.names, size.legend=TRUE, color.legend='right')
dev.off()
